#!/usr/bin/python3 -u

# @file enable_tool
# @author Frederich Stine
# @brief host tool for enabling a feature on a fob
# @date 2023
#
# This source file is part of an example system for MITRE's 2023 Embedded
# CTF (eCTF). This code is being provided only for educational purposes for the
# 2023 MITRE eCTF competition, and may not meet MITRE standards for quality.
# Use this code at your own risk!
#
# @copyright Copyright (c) 2023 The MITRE Corporation

import socket
import argparse
import logging
import common

# @brief Function to send commands to enable a feature on a fob
# @param fob_bridge, bridged serial connection to fob
# @param package_name, name of the package file to read from
# @param socket_host, the socket host for the bridge
# @param package_dir, The feature package directory
def enable(fob_bridge, package_name, socket_host, package_dir):

    # Connect fob socket to serial
    fob_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    fob_sock.connect((socket_host, int(fob_bridge)))

    fob_sock.settimeout(60)

    fob_d = common.FobConnection(fob_sock)

    fob_d.ecdh_exchange()

    # Open and read binary data from package file
    with open(f"{package_dir}/{package_name}", "rb") as fhandle:
        encrypted_feature = fhandle.read()

    # Send package to fob
    fob_d.send_packet(0x45, encrypted_feature)

    fob_d.wait_for_ack()

    print("Successfully did feature thing")

    return 0


# @brief Main function
#
# Main function handles parsing arguments and passing them to program
# function.
def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--fob-bridge", help="Bridge for the fob", type=int, required=True,
    )
    parser.add_argument(
        "--package-name", help="Name of the package file", type=str, required=True,
    )

    parser.add_argument(
        "--socket-host", help="Socket Host", type=str, default="ectf-net",
    )
    parser.add_argument(
        "--package-dir",
        help="Allows the file to pull the secrets from the local directory",
        type=str,
        default="/package_dir",
    )

    logging.basicConfig(level=logging.INFO)

    args = parser.parse_args()

    enable(args.fob_bridge, args.package_name, args.socket_host, args.package_dir)


if __name__ == "__main__":
    main()
